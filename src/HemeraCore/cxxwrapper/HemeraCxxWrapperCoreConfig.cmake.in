
if (CMAKE_VERSION VERSION_LESS 2.8.3)
    message(FATAL_ERROR "Hemera Cxx Wrapper requires at least CMake version 2.8.3")
endif()

get_filename_component(_hemeraQtSDKCore_install_prefix @CMAKE_INSTALL_PREFIX@ ABSOLUTE)

# For backwards compatibility only. Use HemeraCxxWrapperCore_VERSION instead.
set(HemeraCxxWrapperCore_VERSION_STRING @HEMERA_QT5_SDK_VERSION@)

set(HemeraCxxWrapperCore_LIBRARIES HemeraCxxWrapper::Core)

if (NOT TARGET HemeraCxxWrapper::Core)

    set(_HemeraCxxWrapperCore_OWN_INCLUDE_DIRS @WRAPPERCORE_INCLUDE_DIRS@)
    set(HemeraCxxWrapperCore_INCLUDE_DIRS ${_HemeraCxxWrapperCore_OWN_INCLUDE_DIRS})

    set(HemeraCxxWrapperCore_DEFINITIONS "")
    set(HemeraCxxWrapperCore_COMPILE_DEFINITIONS "")

    set(_HemeraCxxWrapperCore_MODULE_DEPENDENCIES "")

    set(_HemeraCxxWrapperCore_FIND_DEPENDENCIES_REQUIRED)
    if (HemeraCxxWrapperCore_FIND_REQUIRED)
        set(_HemeraCxxWrapperCore_FIND_DEPENDENCIES_REQUIRED REQUIRED)
    endif()
    set(_HemeraCxxWrapperCore_FIND_DEPENDENCIES_QUIET)
    if (HemeraCxxWrapperCore_FIND_QUIETLY)
        set(_HemeraCxxWrapperCore_DEPENDENCIES_FIND_QUIET QUIET)
    endif()
    set(_HemeraCxxWrapperCore_FIND_VERSION_EXACT)
    if (HemeraCxxWrapperCore_FIND_VERSION_EXACT)
        set(_HemeraCxxWrapperCore_FIND_VERSION_EXACT EXACT)
    endif()

    foreach(_module_dep ${_HemeraCxxWrapperCore_MODULE_DEPENDENCIES})
        if (NOT HemeraCxxWrapper${_module_dep}_FOUND)
            find_package(HemeraCxxWrapper${_module_dep}
                ${HemeraCxxWrapperCore_VERSION_STRING} ${_HemeraCxxWrapperCore_FIND_VERSION_EXACT}
                ${_HemeraCxxWrapperCore_DEPENDENCIES_FIND_QUIET}
                ${_HemeraCxxWrapperCore_FIND_DEPENDENCIES_REQUIRED}
                PATHS "${CMAKE_CURRENT_LIST_DIR}/.." NO_DEFAULT_PATH
            )
        endif()

        if (NOT HemeraCxxWrapper${_module_dep}_FOUND)
            set(HemeraCxxWrapperCore_FOUND False)
            return()
        endif()

        list(APPEND HemeraCxxWrapperCore_INCLUDE_DIRS "${HemeraCxxWrapper${_module_dep}_INCLUDE_DIRS}")
        list(APPEND HemeraCxxWrapperCore_DEFINITIONS ${HemeraCxxWrapper${_module_dep}_DEFINITIONS})
        list(APPEND HemeraCxxWrapperCore_COMPILE_DEFINITIONS ${HemeraCxxWrapper${_module_dep}_COMPILE_DEFINITIONS})
        list(APPEND HemeraCxxWrapperCore_EXECUTABLE_COMPILE_FLAGS ${HemeraCxxWrapper${_module_dep}_EXECUTABLE_COMPILE_FLAGS})
    endforeach()
    list(REMOVE_DUPLICATES HemeraCxxWrapperCore_INCLUDE_DIRS)
    list(REMOVE_DUPLICATES HemeraCxxWrapperCore_DEFINITIONS)
    list(REMOVE_DUPLICATES HemeraCxxWrapperCore_COMPILE_DEFINITIONS)
    if (HemeraCxxWrapperCore_EXECUTABLE_COMPILE_FLAGS)
        list(REMOVE_DUPLICATES HemeraCxxWrapperCore_EXECUTABLE_COMPILE_FLAGS)
    endif()

    set(_HemeraCxxWrapperCore_LIB_DEPENDENCIES "HemeraQt5SDK::Core Qt5::Core Qt5::Network Qt5::DBus")

    # Target management
    include("${CMAKE_CURRENT_LIST_DIR}/HemeraCxxWrapperCoreTargets.cmake")

    set_property(TARGET HemeraCxxWrapper::Core PROPERTY
        INTERFACE_INCLUDE_DIRECTORIES ${_HemeraCxxWrapperCore_OWN_INCLUDE_DIRS})
    set_property(TARGET HemeraCxxWrapper::Core PROPERTY
        INTERFACE_COMPILE_DEFINITIONS ${HemeraCxxWrapperCore_COMPILE_DEFINITIONS})

endif()
